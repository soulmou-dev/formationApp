name: CI/CD - FormationApp

on:
  push:
    #branches: [ main ]
    branches: [ blablablablabla ]
  pull_request:
    #branches: [ main ]
    branches: [ blablablablabla ]
jobs:

  test:
    name: Executer les tests unitaires
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.4
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, intl, pdo_mysql
      
      - name: prépation de l'environement
        run: |
          cp .env.test .env.test.local
          sed -i '/^DATABASE_URL=/d' .env.test.local
          echo "DATABASE_URL=mysql://root:root@127.0.0.1:3306/formationapp" >> .env.test.local
          echo "DATABASE_URL=mysql://root:root@127.0.0.1:3306/formationapp_test" >> $GITHUB_ENV
      
      - name: Installation des dépendances
        run: composer install --no-interaction --prefer-dist

      - name: Wait for DB to be ready
        run: sleep 10

      - name: Create test database
        run: php bin/console doctrine:database:create --env=test

      - name: Run migrations
        run: php bin/console doctrine:migrations:migrate --no-interaction --env=test

      - name: Load fixtures
        run: php bin/console doctrine:fixtures:load --no-interaction --env=test

      - name: Run unit tests
        run: php bin/phpunit --testdox

  build:
    name: 🏗️ Build app and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    env:
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Generate .env.local for production
        run: |
          cp .env .env.local
          sed -i '/^ENV=/d' .env.local
          sed -i '/^DATABASE_URL=/d' .env.local
          echo "ENV=prod" >> .env.local
          echo "DATABASE_URL=mysql://${DB_USER}:${DB_PASSWORD}@127.0.0.1:3306/${DB_NAME}" >> .env.local
          
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/formationapp:latest -f Dockerfile .

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/formationapp:latest